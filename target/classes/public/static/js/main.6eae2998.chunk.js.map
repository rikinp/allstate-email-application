{"version":3,"sources":["components/E-mail/Email.js","components/Emailinbox/EmailInbox.js","App.js","index.js"],"names":["Email","selectedEmail","undefined","className","email","Divider","subject","message","drawerWidth","PermanentDrawerLeft","emailData","deleteEmail","toggleSeen","useState","setSelectedEmail","searchField","setSearchField","filteredEmails","filter","toLowerCase","includes","Box","sx","display","CssBaseline","AppBar","position","width","ml","Toolbar","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","type","placeholder","onChange","e","target","value","List","map","ListItem","alignItems","ListItemAvatar","Badge","color","invisible","seen","Avatar","Mail","ListItemButton","onClick","handleEmailClick","id","ListItemText","primary","secondary","IconButton","text","index","disablePadding","ListItemIcon","flexGrow","bgcolor","p","App","setEmailData","getData","axios","get","data","useEffect","fetch","method","then","response","ok","clickedEmail","requestOptions","headers","body","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eae2998.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Email.css\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nfunction Email({ selectedEmail }) {\r\n  return (\r\n    <div>\r\n      {selectedEmail !== null && selectedEmail !== undefined ? (\r\n        <div className=\"mail\">\r\n          <div className=\"mail-body\">\r\n            <div className=\"mail-bodyHeader\">\r\n              <div className=\"mail-subject\">\r\n                <h2>From: {selectedEmail.email}</h2>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"mail-subject\">\r\n                <h2>Subject: {selectedEmail.subject}</h2>\r\n              </div>\r\n              <Divider />\r\n            </div>\r\n            <div className=\"mail-message\">\r\n              <p>{selectedEmail.message}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No email selected.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Email;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport List from \"@mui/material/List\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useState } from \"react\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport { Mail } from \"@material-ui/icons\";\r\nimport Email from \"../E-mail/Email\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst drawerWidth = 400;\r\n\r\nexport default function PermanentDrawerLeft({ emailData, deleteEmail, toggleSeen }) {\r\n  \r\n  const [selectedEmail, setSelectedEmail] = useState(null);\r\n\r\n  const handleEmailClick = (email) => {\r\n    setSelectedEmail(email);\r\n    toggleSeen(email);\r\n  };\r\n\r\n  const [searchField, setSearchField] = useState(\"\");\r\n\r\n  const filteredEmails = emailData.filter((email) => {\r\n    return (\r\n      email.email.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setSearchField(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{ width: `calc(100% - ${drawerWidth}px)`, ml: `${drawerWidth}px` }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            AllState Email Application\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          \"& .MuiDrawer-paper\": {\r\n            width: drawerWidth,\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n      >\r\n        <Toolbar>\r\n          <div className=\"search\">\r\n            <div className=\"searchInputs\">\r\n              <input\r\n                type=\"search\"\r\n                placeholder=\"From: Search here...\"\r\n                onChange={handleChange}\r\n              />\r\n              <div className=\"searchIcon\">\r\n                <SearchIcon />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {filteredEmails.map((email) => (\r\n            <ListItem key={email.id} alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Badge variant=\"dot\" color=\"primary\" invisible={email.seen}>\r\n                  \r\n                  <Avatar>\r\n                    <Mail />\r\n                  </Avatar>\r\n                </Badge>\r\n              </ListItemAvatar>\r\n              <ListItemButton\r\n                onClick={() => handleEmailClick(email)}\r\n                data-testid={`email-item-${email.id}`}\r\n              >\r\n                <div>\r\n                  <ListItemText primary={email.subject} />\r\n                  <ListItemText\r\n                    primary={\r\n                      <React.Fragment>\r\n                        {\" From: \"}\r\n                        {email.email}\r\n                      </React.Fragment>\r\n                    }\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography\r\n                          sx={{ display: \"inline\" }}\r\n                          component=\"span\"\r\n                          variant=\"body2\"\r\n                          color=\"text.primary\"\r\n                        >\r\n                          {email.message}\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </div>\r\n              </ListItemButton>\r\n              <IconButton aria-label=\"delete\" onClick={() => deleteEmail(email)} data-testid={`delete-button-${email.id}`}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\"].map((text, index) => (\r\n            <ListItem key={text} disablePadding>\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, bgcolor: \"background.default\", p: 1 }}\r\n      >\r\n        <Email selectedEmail={selectedEmail} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport PermanentDrawerLeft from \"./components/Emailinbox/EmailInbox.js\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [emailData, setEmailData] = useState([]);\n\n  const deleteEmail = (email) => {\n    const requestOptions = {\n      method: \"DELETE\",\n    };\n    fetch(`/email/delete/${email.id}`, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          getData();\n        }\n      });\n  };\n\n  const toggleSeen = (clickedEmail) => {\n    if(clickedEmail.seen === false) {\n      clickedEmail.seen = true;\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(clickedEmail)\n      };\n      fetch(`/email/update`, requestOptions)\n    }\n  };\n\n  const getData = async () => {\n    const { data } = await axios.get(`/email/getAll`);\n    setEmailData(data);\n  };\n\n  useEffect(() => {\n    getData();\n    // setEmailData(jsonData);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <PermanentDrawerLeft\n        emailData={emailData}\n        deleteEmail={deleteEmail}\n        toggleSeen={toggleSeen}\n      />\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App/>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}